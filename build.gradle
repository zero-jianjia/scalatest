subprojects {
    apply plugin: 'java'
    apply plugin: 'scala'
    apply plugin: 'idea'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    version = '1.0'

    jar {
        manifest {
            attributes 'Implementation-Title': 'Gradle Quickstart',
                    'Implementation-Version': version
        }
    }

    repositories {
        mavenLocal()
        maven { url 'http://maven.oschina.net/content/groups/public/' }
        maven { url 'http://uk.maven.org/maven2/' }
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url 'https://repo.spring.io/libs-snapshot/' }
        mavenCentral()
    }

    dependencies {
        compile "org.scala-lang:scala-library:2.11.7"
        compile "org.scala-lang:scala-compiler:2.11.7"
        compile "org.scala-lang:scala-reflect:2.11.7"

        compile 'com.typesafe.akka:akka-actor_2.11:2.4.3'

        compile 'com.fasterxml.jackson.module:jackson-module-scala_2.11:2.7.4'


        compile 'com.google.protobuf:protobuf-java:2.6.1'
        compile 'com.googlecode.protobuf-java-format:protobuf-java-format:1.4'

        compile 'org.springframework:spring-context:4.2.4.RELEASE'
        compile 'org.springframework:spring-jdbc:4.2.4.RELEASE'

        //thrift
        compile 'org.apache.thrift:libthrift:0.9.3'

        compile 'net.jpountz.lz4:lz4:1.3.0'

        compile 'org.xerial.snappy:snappy-java:1.1.2'

        compile 'org.scalacheck:scalacheck_2.11:1.13.0'
        compile 'org.scalatest:scalatest_2.11:3.0.0-M15'

        compile 'com.fasterxml.jackson.module:jackson-module-scala_2.11:2.7.2'

        testCompile 'org.mockito:mockito-core:2.0.43-beta'

        testCompile 'org.jmockit:jmockit:1.19'
        testCompile 'junit:junit:4.11'

    }

    test {
        systemProperties 'property': 'value'
    }

    uploadArchives {
        repositories {
            flatDir {
                dirs 'repos'
            }
        }
    }

    sourceSets {
        main {
            scala {
                srcDirs = ['src/main/scala', 'src/main/java']
            }
            java {
                srcDirs = []
            }
        }

        test {
            scala {
                srcDirs = ['src/test/scala', 'src/test/java']
            }
            java {
                srcDirs = []
            }
        }
    }

    task "mkdirs" << {
        sourceSets*.scala.srcDirs*.each { it.mkdirs() }
        sourceSets*.java.srcDirs*.each { it.mkdirs() }
        sourceSets*.resources.srcDirs*.each { it.mkdirs() }
    }
}